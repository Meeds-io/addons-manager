<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2003-2014 eXo Platform SAS.

    This file is part of eXo Platform - Add-ons Manager.

    eXo Platform - Add-ons Manager is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; either version 3 of
    the License, or (at your option) any later version.

    eXo Platform - Add-ons Manager software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with eXo Platform - Add-ons Manager; if not, write to the Free
    Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
    02110-1301 USA, or see <http://www.gnu.org/licenses />.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>maven-parent-pom</artifactId>
    <groupId>org.exoplatform</groupId>
    <version>13</version>
    <relativePath />
  </parent>
  <groupId>org.exoplatform.platform</groupId>
  <artifactId>addons-manager</artifactId>
  <version>1.0.0-RC2</version>
  <packaging>jar</packaging>
  <name>eXo Platform - Add-ons Manager</name>
  <description>Command line utility to manage Platform add-ons</description>
  <scm>
    <connection>scm:git:git://github.com/exoplatform/addons-manager.git</connection>
    <developerConnection>scm:git:git@github.com:exoplatform/addons-manager.git</developerConnection>
    <tag>1.0.0-RC2</tag>
  </scm>
  <properties>
    <!-- **************************************** -->
    <!-- Jira Settings -->
    <!-- **************************************** -->
    <jira.project.key>AM</jira.project.key>
    <!-- **************************************** -->
    <!-- Jenkins Settings -->
    <!-- **************************************** -->
    <jenkins.job.name>addons-manager-master-ci</jenkins.job.name>
    <!-- **************************************** -->
    <!-- Project Dependencies -->
    <!-- **************************************** -->
    <aether-util.version>1.0.0.v20140518</aether-util.version>
    <groovy.version>2.3.4</groovy.version>
    <jcommander.version>1.35</jcommander.version>
    <jline.version>2.12</jline.version>
    <!-- Tests dependencies -->
    <hamcrest-core.version>1.3</hamcrest-core.version>
    <junit.version>4.11</junit.version>
    <spock-core.version>0.7-groovy-2.0</spock-core.version>
    <platform.groupId>org.exoplatform.platform.distributions</platform.groupId>
    <platform.artifactId>plf-community-tomcat-standalone</platform.artifactId>
    <platform.version>4.1-M2</platform.version>
    <!-- **************************************** -->
    <!-- Build/Tests settings -->
    <!-- **************************************** -->
    <integration.tests.dir.path>${project.build.directory}/integration-tests</integration.tests.dir.path>
    <tested.artifact.path>${project.build.directory}/${project.build.finalName}.jar</tested.artifact.path>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
      <version>${jcommander.version}</version>
    </dependency>
    <!-- Required for colorized console on windows (bundles jansi ) + terminal interaction -->
    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
      <version>${jline.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
      <version>${groovy.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-json</artifactId>
      <version>${groovy.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-xml</artifactId>
      <version>${groovy.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
      <version>${aether-util.version}</version>
    </dependency>
    <!-- groovy-groovydoc is required for the site generation -->
    <!-- We don't want to bundle it -->
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-groovydoc</artifactId>
      <version>${groovy.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>${hamcrest-core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <version>${spock-core.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>junit-dep</artifactId>
          <groupId>junit</groupId>
        </exclusion>
        <exclusion>
          <artifactId>groovy-all</artifactId>
          <groupId>org.codehaus.groovy</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <build>
    <sourceDirectory>src/main/groovy</sourceDirectory>
    <testSourceDirectory>src/test/groovy</testSourceDirectory>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/*.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
          <execution>
            <id>site</id>
            <phase>pre-site</phase>
            <goals>
              <goal>groovydoc</goal>
            </goals>
            <configuration>
              <groovydocOutputDirectory>${project.reporting.outputDirectory}/gapidocs</groovydocOutputDirectory>
              <scope>public</scope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <manifestEntries>
                <Main-Class>org.exoplatform.platform.am.AddonsManager</Main-Class>
                <Date>${maven.build.timestamp}</Date>
                <Implementation-URL>${project.url}</Implementation-URL>
                <SCM-URL>${project.scm.connection}</SCM-URL>
                <SCM-Revision>${buildNumber}</SCM-Revision>
                <Specification-Title>${exo.product.name}</Specification-Title>
                <Specification-Version>${parsedVersion.majorVersion}.0</Specification-Version>
                <Specification-Vendor>${project.organization.name}</Specification-Vendor>
                <Implementation-Title>${project.name}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              </manifestEntries>
            </transformer>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
          </transformers>
        </configuration>
      </plugin>
      <!-- ZIP archive -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>create-zip-package</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assemblies/bundle.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
              <attach>true</attach>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <!-- Integration tests -->
    <profile>
      <id>run-its</id>
      <build>
        <testResources>
          <testResource>
            <targetPath>${project.build.directory}/test-data</targetPath>
            <filtering>true</filtering>
            <directory>${project.basedir}/src/test/data</directory>
            <includes>
              <include>**/*.json</include>
            </includes>
          </testResource>
          <testResource>
            <targetPath>${project.build.directory}/test-data</targetPath>
            <filtering>false</filtering>
            <directory>${project.basedir}/src/test/data</directory>
            <excludes>
              <exclude>**/*.json</exclude>
            </excludes>
          </testResource>
        </testResources>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration>
                <systemPropertyVariables>
                  <testDataPath>${project.build.directory}/test-data</testDataPath>
                  <integrationTestsDirPath>${integration.tests.dir.path}</integrationTestsDirPath>
                  <testedArtifactPath>${tested.artifact.path}</testedArtifactPath>
                  <platformVersion>${platform.version}</platformVersion>
                  <jacocoAgent>${argLine}</jacocoAgent>
                  <testWebServerHttpPort>${webserver.http.port}</testWebServerHttpPort>
                </systemPropertyVariables>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>reserve-network-port</id>
                <phase>initialize</phase>
                <goals>
                  <goal>reserve-network-port</goal>
                </goals>
                <configuration>
                  <portNames>
                    <portName>webserver.http.port</portName>
                  </portNames>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-integration-tests</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <includeScope>test</includeScope>
                  <includeTypes>zip</includeTypes>
                  <outputDirectory>${integration.tests.dir.path}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-tomcat</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run-war-only</goal>
                </goals>
                <configuration>
                  <fork>true</fork>
                </configuration>
              </execution>
              <execution>
                <id>stop-tomcat</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>shutdown</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <port>${webserver.http.port}</port>
              <path>/</path>
              <warDirectory>${project.build.directory}/test-data</warDirectory>
              <ignorePackaging>true</ignorePackaging>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>${platform.groupId}</groupId>
          <artifactId>${platform.artifactId}</artifactId>
          <version>${platform.version}</version>
          <type>zip</type>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>platform-community-tomcat-its</id>
      <activation>
        <property>
          <name>platform.distribution</name>
          <value>platform-community-tomcat</value>
        </property>
      </activation>
      <properties>
        <platform.groupId>org.exoplatform.platform.distributions</platform.groupId>
        <platform.artifactId>plf-community-tomcat-standalone</platform.artifactId>
      </properties>
    </profile>
    <!-- You need to have access to eXo private repositories to download these packages -->
    <profile>
      <id>platform-enterprise-tomcat-its</id>
      <activation>
        <property>
          <name>platform.distribution</name>
          <value>platform-enterprise-tomcat</value>
        </property>
      </activation>
      <properties>
        <platform.groupId>com.exoplatform.platform.distributions</platform.groupId>
        <platform.artifactId>plf-enterprise-tomcat-standalone</platform.artifactId>
      </properties>
    </profile>
    <profile>
      <id>platform-enterprise-jbosseap-its</id>
      <activation>
        <property>
          <name>platform.distribution</name>
          <value>platform-enterprise-jbosseap</value>
        </property>
      </activation>
      <properties>
        <platform.groupId>com.exoplatform.platform.distributions</platform.groupId>
        <platform.artifactId>plf-enterprise-jbosseap-standalone</platform.artifactId>
      </properties>
    </profile>
    <profile>
      <id>coverage</id>
      <properties>
        <!-- When using the maven-surefire-plugin or maven-failsafe-plugin you must not use a forkCount of 0
        or set the forkMode to never as this would prevent the execution
        of the tests with the javaagent set and no coverage would be recorded. -->
        <forkCount>1</forkCount>
      </properties>
    </profile>
  </profiles>
</project>
